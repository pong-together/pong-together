version: "3.9"
   
services:
  nginx:
    build: ./nginx
    volumes:
      - nginx_log:/log/nginx
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    depends_on:
      - backend
    restart: always

  backend:
    build: ./backend
    command: sh /scripts/top-entrypoint.sh
    volumes:
      - ./backend/srcs/:/code
      - django_log:/log/django
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: always
  
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "cluster.name=pongtogether-elasticsearch-cluster"
      - "node.name=pongtogether-node"
      # - "path.data=/var/lib/elasticsearch"
      # - "path.logs=/var/log/elasticsearch"
      - "network.host=0.0.0.0"
      - "xpack.security.enabled=false"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    ports:
      - "5003:5003"
    volumes:
      - ./elk/logstash/config/:/usr/share/logstash/config/
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
      - nginx_log:/log/nginx
      - django_log:/log/django
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    ports:
      - "5601:5601"
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    depends_on:
      - elasticsearch
  
volumes:
  postgres_data: {}
  nginx_log: {}
  django_log: {}
